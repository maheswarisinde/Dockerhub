    pipeline {
        agent any 
        environment {
            Docker_Image_Name = 'myimage'
            Docker_Tag = 'v2'
        }
        options { 
            timestamps() 
            buildDiscarder(logRotator(numToKeepStr: '10'))
            }
        stages {
            stage ('Pre-Checks') {
            parallel {
             stage ('Docker-Verify') {
                 steps {
                     sh 'docker --version'
                 }
             }
             stage ('Git-Verify') {
                 steps {
                     sh 'git --version'
                }
             }    
            }
            }
            stage ('Docker-Build') {

                when {
                    expression {
                        return env.GIT_BRANCH == "origin/main"
                    }
                }
             steps {
                 sh 'aws ecr get-login-password --region ap-southeast-1 | sudo docker login --username AWS --password-stdin 674630795520.dkr.ecr.ap-southeast-1.amazonaws.com'
                 sh "sudo docker build -t my-jenkins-projects:${env.BUILD_NUMBER} ."
                 sh "sudo docker tag my-jenkins-projects:${env.BUILD_NUMBER} 674630795520.dkr.ecr.ap-southeast-1.amazonaws.com/my-jenkins-projects:${env.BUILD_NUMBER}"
                 sh "sudo docker push 674630795520.dkr.ecr.ap-southeast-1.amazonaws.com/my-jenkins-projects:${env.BUILD_NUMBER}"
                }
            }   
            stage ('Docker-Image-Verify') {
             steps {
                 sh 'sudo docker images'
                }
            } 
            stage ('Docker-CleanUp') {
             steps {
                 sh 'sudo docker rm -f \$(sudo docker ps -a -q) 2> /dev/null ||true'
                }
            }
            stage ('Docker-Deploy') {
                input
                {
                    message "Do you want to process for Deployment "
                }
             steps {
                 sh "sudo docker run -itd -p 80:80 674630795520.dkr.ecr.ap-southeast-1.amazonaws.com/my-jenkins-projects:${env.BUILD_NUMBER}"
                 sh "sudo docker ps"
                }
            }
        }
        post {
             always {
                sh ' sudo docker images '
             }
             aborted {
                sh 'sudo docker ps'
             }
             failure {
                sh 'sudo docker rm -f \$(sudo docker ps -a -q) 2> /dev/null ||true'
             }
             success {
                sh 'curl localhost'
             }
             cleanup {
                sh 'sudo docker image prune -af'
             }
        }
    }
